/*
 * langfuse
 *
 * ## Authentication  Authenticate with the API using [Basic Auth](https://en.wikipedia.org/wiki/Basic_access_authentication), get API keys in the project settings:  - username: Langfuse Public Key - password: Langfuse Secret Key  ## Exports  - OpenAPI spec: https://cloud.langfuse.com/generated/api/openapi.yml - Postman collection: https://cloud.langfuse.com/generated/postman/collection.json
 *
 * The version of the OpenAPI document:
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PromptMeta {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "versions")]
    pub versions: Vec<i32>,
    #[serde(rename = "labels")]
    pub labels: Vec<String>,
    #[serde(rename = "tags")]
    pub tags: Vec<String>,
}

impl PromptMeta {
    pub fn new(
        name: String,
        versions: Vec<i32>,
        labels: Vec<String>,
        tags: Vec<String>,
    ) -> PromptMeta {
        PromptMeta {
            name,
            versions,
            labels,
            tags,
        }
    }
}
