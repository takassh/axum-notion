/*
 * langfuse
 *
 * ## Authentication  Authenticate with the API using [Basic Auth](https://en.wikipedia.org/wiki/Basic_access_authentication), get API keys in the project settings:  - username: Langfuse Public Key - password: Langfuse Secret Key  ## Exports  - OpenAPI spec: https://cloud.langfuse.com/generated/api/openapi.yml - Postman collection: https://cloud.langfuse.com/generated/postman/collection.json
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DailyMetricsDetails {
    #[serde(rename = "date")]
    pub date: String,
    #[serde(rename = "countTraces")]
    pub count_traces: i32,
    #[serde(rename = "countObservations")]
    pub count_observations: i32,
    /// Total model cost in USD
    #[serde(rename = "totalCost")]
    pub total_cost: f64,
    #[serde(rename = "usage")]
    pub usage: Vec<models::UsageByModel>,
}

impl DailyMetricsDetails {
    pub fn new(date: String, count_traces: i32, count_observations: i32, total_cost: f64, usage: Vec<models::UsageByModel>) -> DailyMetricsDetails {
        DailyMetricsDetails {
            date,
            count_traces,
            count_observations,
            total_cost,
            usage,
        }
    }
}

