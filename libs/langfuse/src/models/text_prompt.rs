/*
 * langfuse
 *
 * ## Authentication  Authenticate with the API using [Basic Auth](https://en.wikipedia.org/wiki/Basic_access_authentication), get API keys in the project settings:  - username: Langfuse Public Key - password: Langfuse Secret Key  ## Exports  - OpenAPI spec: https://cloud.langfuse.com/generated/api/openapi.yml - Postman collection: https://cloud.langfuse.com/generated/postman/collection.json
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TextPrompt {
    #[serde(rename = "prompt")]
    pub prompt: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "version")]
    pub version: i32,
    #[serde(rename = "config", deserialize_with = "Option::deserialize")]
    pub config: Option<serde_json::Value>,
    /// List of deployment labels of this prompt version.
    #[serde(rename = "labels")]
    pub labels: Vec<String>,
    /// List of tags. Used to filter via UI and API. The same across versions of a prompt.
    #[serde(rename = "tags")]
    pub tags: Vec<String>,
}

impl TextPrompt {
    pub fn new(prompt: String, name: String, version: i32, config: Option<serde_json::Value>, labels: Vec<String>, tags: Vec<String>) -> TextPrompt {
        TextPrompt {
            prompt,
            name,
            version,
            config,
            labels,
            tags,
        }
    }
}

