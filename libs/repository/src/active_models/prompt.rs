//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "prompt")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub prompt_session_id: String,
    pub user_prompt: String,
    pub assistant_prompt: String,
    pub created_at: DateTime,
    pub updated_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::prompt_page::Entity")]
    PromptPage,
    #[sea_orm(
        belongs_to = "super::prompt_session::Entity",
        from = "Column::PromptSessionId",
        to = "super::prompt_session::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    PromptSession,
}

impl Related<super::prompt_page::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PromptPage.def()
    }
}

impl Related<super::prompt_session::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PromptSession.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
